# -*- coding: utf-8 -*-
"""generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10iGdqapzWkJyG1_INkTuitlD7nLP4j04
"""

with open("generator.py", "w") as f:
    f.write("""
from qiskit import QuantumCircuit, Aer, execute
import string

def get_qrandom_bits(n_bits):
    qc = QuantumCircuit(n_bits, n_bits)
    qc.h(range(n_bits))
    qc.measure(range(n_bits), range(n_bits))
    backend = Aer.get_backend('qasm_simulator')
    result = execute(qc, backend, shots=1).result()
    bits = list(result.get_counts().keys())[0][::-1]
    return bits

def generate_password(length=16):
    charset = string.ascii_letters + string.digits + string.punctuation
    bits = get_qrandom_bits(length * 8)
    password = ''
    for i in range(length):
        segment = bits[i*8:(i+1)*8]
        index = int(segment, 2) % len(charset)
        password += charset[index]
    return password
""")